
<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Demo</title>
    <style>
        body {
          font-family: sans-serif;
          margin: 0;
          padding: 0;
          background: #f8f9fa;
        }

        header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          background: white;
          border-bottom: 1px solid #ccc;
          padding: 10px 20px;
        }

        .logo {
          font-size: 24px;
        }

        nav button {
          margin-left: 10px;
          padding: 6px 12px;
          cursor: pointer;
        }

        .btn-link {
            display: inline-block;
            margin-left: 10px;
            padding: 6px 12px;
            background-color: #6c63ff;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            font-size: 14px;
        }



        main {
          padding: 20px;
          border: 2px solid #007bff;
          margin: 20px;
          background: white;
        }

        .input-section {
          display: flex;
          align-items: flex-end;
          gap: 20px;
          margin-bottom: 30px;
        }

        .input-section label {
          display: block;
          font-size: 12px;
        }

        .input-section input[type="text"],
        .input-section input[type="file"] {
          display: block;
          padding: 6px;
          margin-top: 5px;
        }

        #gerar-cor {
          background-color: #6c63ff;
          color: white;
          border: none;
          padding: 10px 16px;
          cursor: pointer;
          border-radius: 5px;
        }

        .result {
          border-top: 1px solid #ccc;
        }

        .color-block {
          display: flex;
          align-items: center;
          margin: 20px 0;
        }

        .color-box {
          width: 60px;
          height: 60px;
          margin-right: 20px;
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">🅱️</div>
        <header>
            
            <nav>
                <a asp-controller="Home" asp-action="Index" class="btn-link">Retirar Cores</a>
                <a asp-controller="Home" asp-action="Privacy" class="btn-link">Recortar Caras</a>
                <a asp-controller="Home" asp-action="wizard" class="btn-link">Gerar Template HTML</a>
            </nav>
        </header>


    </header>

    <main>
        <section class="input-section">
            <div>
                <label>Insira aqui o nome do logo</label>
                <input type="text" id="logo-nome" placeholder="Exemplo: benfica" />
            </div>
            <div>
                <label>upload do logo</label>
                <input type="file" id="file-upload" />
            </div>
            <button id="gerar-cor">🎨 Gerar Cor</button>
        </section>

        <section class="result" id="result-section">
            <!-- Resultados vão ser inseridos aqui -->
        </section>
    </main>

    <script>
                document.getElementById('gerar-cor').addEventListener('click', async () => {
          const nome = document.getElementById("logo-nome").value.trim();
          const fileInput = document.getElementById("file-upload");
          const file = fileInput.files[0];

          if (!nome) {
            alert("Por favor insira o nome do logo.");
            return;
          }

          if (!file) {
            alert("Por favor selecione um arquivo de imagem.");
            return;
          }

          const resultSection = document.getElementById("result-section");
          resultSection.innerHTML = "";

          try {
            const formData = new FormData();
           
            formData.append("imageFile", file);

            const response = await fetch("http://localhost:50372/Colour/GetColors?teamName=${encodeURIComponent(nome)}", {
              method: "POST",
              body: formData
            });

            if (!response.ok) throw new Error("Erro ao chamar a API");

            const data = await response.json();
            const cor = data[0];

            // Bloco para cor principal
            const bloco = document.createElement("div");
            bloco.className = "color-block";

            const box = document.createElement("div");
            box.className = "color-box";
            box.style.backgroundColor = cor.colourHex;

            if (cor.colourHex.toUpperCase() === "#FFFFFF") {
              box.style.border = "1px solid #ccc";
            }

            const textoPrincipal = document.createElement("p");
            textoPrincipal.innerHTML = `
              <strong>Nome:</strong> ${cor.colourName}<br>
              <strong>HEX:</strong> ${cor.colourHex}<br>
              <strong>Descrição:</strong> ${cor.description}
            `;

            bloco.appendChild(box);
            bloco.appendChild(textoPrincipal);
            resultSection.appendChild(bloco);

            // Bloco para cor de fundo sugerida
            const blocoBg = document.createElement("div");
            blocoBg.className = "color-block";

            const boxBg = document.createElement("div");
            boxBg.className = "color-box";
            boxBg.style.backgroundColor = cor.backgroundColor;

            if (cor.backgroundColor.toUpperCase() === "#FFFFFF") {
              boxBg.style.border = "1px solid #ccc";
            }

            const textoBg = document.createElement("p");
            textoBg.innerHTML = `
              <strong>Cor de Fundo Sugerida:</strong><br>
              ${cor.backgroundColor}
            `;

            blocoBg.appendChild(boxBg);
            blocoBg.appendChild(textoBg);
            resultSection.appendChild(blocoBg);

          } catch (error) {
            console.error(error);
            alert("Erro ao obter cores da API.");
          }
        });

    </script>





    
</body>


</html>
